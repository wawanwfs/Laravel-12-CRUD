name: Laravel GitHub Pages

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "latest"
          extensions: mbstring, dom, fileinfo, sqlite
          coverage: xdebug

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      # php migrate
      - name: Run migrations
        run: php artisan migrate --force

      # php db:seed
      - name: Run database seeder
        run: php artisan db:seed --force
      
      # php storage:link
      - name: Create storage link
        run: php artisan storage:link
      
      # php cache:clear
      - name: Clear cache
        run: php artisan optimize:clear
      
      # php config:cache
      - name: Cache config
        run: php artisan config:cache
      
      # php route:cache
      - name: Cache routes
        run: php artisan route:cache

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          touch database/database.sqlite
          vendor/bin/phpunit

      - name: Install NPM dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build frontend
        run: npm run build

  build-and-deploy:
    needs: laravel-tests
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "latest"
          extensions: mbstring, dom, fileinfo, mysql, gd, curl, zip, xml
          tools: composer:v2

      - name: Install Composer Dependencies (Production Only)
        run: composer install --no-dev --prefer-dist --no-progress --optimize-autoloader
      
      - name: Copy .env for Production
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          # Set environment variables for production
          sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
          sed -i "s|APP_URL=.*|APP_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}|" .env

      - name: Generate Key
        run: php artisan key:generate --force

      - name: Install NPM dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build frontend
        run: npm run build

      - name: Optimize Laravel
        run: |
          php artisan optimize
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
        env:
          APP_ENV: production
          APP_DEBUG: false
          APP_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

      # Siapkan file .htaccess untuk Apache
      - name: Create .htaccess file
        run: |
          cat > public/.htaccess << 'EOL'
# Aktivasi modul rewrite
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
    
    # Redirect Trailing Slashes...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]
    
    # Serve Existing Files and Directories...
    RewriteCond %{REQUEST_FILENAME} -f [OR]
    RewriteCond %{REQUEST_FILENAME} -d
    RewriteRule ^ - [L]
    
    # Handle Front Controller...
    RewriteRule ^ index.php [L]
</IfModule>

# Disable directory listing
Options -Indexes

# Set default character set
AddDefaultCharset UTF-8
EOL

      # Deploy ke GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: public        # Folder yang berisi konten yang akan di-deploy
          branch: gh-pages      # Branch tujuan untuk deployment
          clean: true           # Hapus file-file yang tidak ada di commit terbaru
          
      # Buat file README.md di branch gh-pages
      - name: Create README.md for gh-pages
        run: |
          mkdir -p gh-pages-temp
          cat > gh-pages-temp/README.md << 'EOL'
# Laravel 12 Application

Ini adalah aplikasi Laravel 12 yang di-deploy ke GitHub Pages.

## Catatan Penting

GitHub Pages tidak mendukung eksekusi PHP secara native. Deployment ini berisi:

- Aset statis (CSS, JS, gambar)
- Frontend yang dibangun dengan Vite/Laravel Mix
- Konten publik dari aplikasi Laravel

Untuk fungsionalitas backend PHP, gunakan hosting yang mendukung PHP atau layanan serverless.
EOL
          
      - name: Deploy README to gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: gh-pages-temp
          branch: gh-pages
          clean: false        # Tidak menghapus file yang sudah ada
