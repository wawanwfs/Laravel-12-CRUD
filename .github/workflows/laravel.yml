name: Laravel

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "latest"
          extensions: mbstring, dom, fileinfo, sqlite
          coverage: xdebug

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      # php migrate
      - name: Run migrations
        run: php artisan migrate --force

      # php db:seed
      - name: Run database seeder
        run: php artisan db:seed --force
      
      # php storage:link
      - name: Create storage link
        run: php artisan storage:link
      
      # php cache:clear
      - name: Clear cache
        run: php artisan optimize:clear
      
      # php config:cache
      - name: Cache config
        run: php artisan config:cache
      
      # php route:cache
      - name: Cache routes
        run: php artisan route:cache

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          touch database/database.sqlite
          vendor/bin/phpunit

      - name: Install NPM dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build frontend
        run: npm run build

  deploy-gh-pages:
    needs: laravel-tests
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Mengambil semua riwayat untuk perhitungan versi

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "latest"
          extensions: mbstring, dom, fileinfo, mysql, gd, curl, zip, xml
          tools: composer:v2

      - name: Install Composer Dependencies
        run: composer install --no-dev --prefer-dist --no-progress --optimize-autoloader
      
      - name: Copy .env for Production
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          # Set environment variables for production
          sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
          sed -i "s|APP_URL=.*|APP_URL=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}|" .env

      - name: Generate Key
        run: php artisan key:generate --force

      - name: Install NPM dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build frontend
        run: npm run build

      - name: Optimize Laravel
        run: |
          php artisan optimize
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
        env:
          APP_ENV: production
          APP_DEBUG: false
          APP_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}

      - name: Prepare GitHub Pages Directory
        run: |
          # Buat direktori untuk GitHub Pages
          mkdir -p gh-pages-build
          
          # Salin seluruh konten folder public ke direktori gh-pages-build
          cp -R public/* gh-pages-build/
          
          # Salin .htaccess
          cp public/.htaccess gh-pages-build/ 2>/dev/null || true
          
          # Buat file index.php untuk GitHub Pages
          cat > gh-pages-build/index.php << 'EOL'
<?php
// File ini digunakan untuk GitHub Pages
// Cek jika ada file index.html dan arahkan ke sana
if (file_exists(__DIR__ . '/index.html')) {
    include_once(__DIR__ . '/index.html');
    exit;
}
// Jika tidak, tampilkan halaman informasi
echo "<h1>Laravel Application</h1>";
echo "<p>Ini adalah aplikasi Laravel yang di-deploy ke GitHub Pages.</p>";
echo "<p>Catatan: GitHub Pages tidak mendukung eksekusi PHP secara native.</p>";
echo "<p>Aset statis dan frontend JS yang dibuild dengan Vite/Mix akan berfungsi dengan baik.</p>";
EOL
          
          # Buat file .nojekyll untuk mencegah pemrosesan Jekyll
          touch gh-pages-build/.nojekyll
          
          # Buat file README.md untuk informasi
          cat > gh-pages-build/README.md << 'EOL'
# Laravel Application on GitHub Pages

Ini adalah aplikasi Laravel yang di-deploy ke GitHub Pages.

## Catatan Penting

GitHub Pages tidak mendukung eksekusi PHP secara native. Deployment ini berisi:

- Aset statis (CSS, JS, gambar)
- Frontend yang dibangun dengan Vite/Laravel Mix
- Konten publik dari aplikasi Laravel

Untuk fungsionalitas backend PHP, gunakan hosting yang mendukung PHP atau layanan serverless.
EOL

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: gh-pages-build   # Folder yang akan dideploy
          branch: gh-pages         # Branch tujuan
          clean: true              # Hapus file yang tidak ada di commit terbaru