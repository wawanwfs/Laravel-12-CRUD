name: Deploy Laravel Public Folder to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode
        uses: actions/checkout@v4
      
      # Setup PHP untuk Laravel
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.5'
          extensions: mbstring, dom, fileinfo, sqlite3, pdo_sqlite, curl, zip, xml
          tools: composer:v2
      
      # Install dependensi PHP
      - name: Install dependensi PHP
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
      
      # Konfigurasi Laravel
      - name: Konfigurasi Laravel
        run: |
          # Buat file .env jika belum ada
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          
          # Konfigurasi untuk production
          sed -i 's/APP_ENV=local/APP_ENV=production/g' .env
          sed -i 's/APP_DEBUG=true/APP_DEBUG=false/g' .env
          
          # Konfigurasi SQLite
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/g' .env
          sed -i '/DB_HOST=/d' .env
          sed -i '/DB_PORT=/d' .env
          sed -i '/DB_DATABASE=/d' .env
          sed -i '/DB_USERNAME=/d' .env
          sed -i '/DB_PASSWORD=/d' .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          
          # Persiapkan database
          mkdir -p database
          touch database/database.sqlite
          
          # Generate application key
          php artisan key:generate
      
      # Setup Node.js dan build frontend assets
      - name: Setup Node.js dan build assets
        run: |
          npm ci
          npm run build
      
      # LANGKAH PENTING: Konversi index.php menjadi index.html statis untuk GitHub Pages
      - name: Buat index.html statis
        run: |
          # Pastikan direktori public sudah ada
          mkdir -p public
          
          # Buat file index.html statis di public
          cat > public/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laravel 12 CRUD Application</title>
    <link rel="stylesheet" href="css/app.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
        }
        .container {
            max-width: 1000px;
            margin: 40px auto;
            padding: 20px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            border-radius: 5px;
        }
        header {
            margin-bottom: 30px;
            border-bottom: 1px solid #eee;
            padding-bottom: 20px;
        }
        h1 {
            color: #3490dc;
            margin-top: 0;
        }
        .note {
            background-color: #f0f4f8;
            border-left: 4px solid #3490dc;
            padding: 15px;
            margin-bottom: 20px;
        }
        .btn {
            display: inline-block;
            background-color: #3490dc;
            color: white;
            padding: 8px 16px;
            text-decoration: none;
            border-radius: 4px;
            font-weight: 500;
            margin-top: 10px;
        }
        .btn:hover {
            background-color: #2779bd;
        }
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        .feature-card {
            border: 1px solid #eee;
            border-radius: 5px;
            padding: 20px;
            background-color: white;
        }
        .feature-card h3 {
            margin-top: 0;
            color: #3490dc;
        }
        footer {
            margin-top: 40px;
            text-align: center;
            font-size: 0.9em;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Laravel 12 CRUD Application</h1>
            <p>Aplikasi CRUD sederhana menggunakan Laravel 12 dan SQLite</p>
        </header>

        <div class="note">
            <p><strong>Catatan:</strong> Ini adalah versi statis dari aplikasi Laravel 12 yang di-host menggunakan GitHub Pages. Karena GitHub Pages hanya mendukung konten statis, fungsionalitas backend Laravel tidak tersedia di sini.</p>
        </div>

        <p>Repositori ini berisi contoh implementasi operasi CRUD (Create, Read, Update, Delete) menggunakan Laravel 12, framework PHP modern dengan fitur-fitur powerful untuk pengembangan web.</p>

        <a href="https://github.com/wawanwfs/Laravel-12-CRUD" class="btn">Lihat Repositori GitHub</a>

        <div class="features">
            <div class="feature-card">
                <h3>Create</h3>
                <p>Tambahkan data baru ke aplikasi dengan form input yang validasi lengkap.</p>
            </div>
            <div class="feature-card">
                <h3>Read</h3>
                <p>Tampilkan dan filter data dari database dengan tampilan yang terorganisir dan responsif.</p>
            </div>
            <div class="feature-card">
                <h3>Update</h3>
                <p>Edit dan perbarui data yang sudah ada dengan validasi data yang menyeluruh.</p>
            </div>
            <div class="feature-card">
                <h3>Delete</h3>
                <p>Hapus data yang tidak diperlukan dengan konfirmasi untuk mencegah penghapusan yang tidak disengaja.</p>
            </div>
        </div>

        <footer>
            <p>&copy; 2025 - Laravel 12 CRUD Application</p>
        </footer>
    </div>

    <script>
        // Script untuk menangani routing SPA
        const redirectPath = sessionStorage.getItem('redirect_path');
        if (redirectPath) {
            console.log('Redirected from:', redirectPath);
            sessionStorage.removeItem('redirect_path');
        }
    </script>
</body>
</html>
EOF
          
          # Buat file 404.html untuk SPA routing
          cat > public/404.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page Not Found</title>
    <script>
        // Simpan path saat ini untuk routing SPA
        const currentPath = window.location.pathname;
        sessionStorage.setItem('redirect_path', currentPath);
        
        // Redirect ke halaman utama dengan mempertimbangkan base path repo
        window.location.href = '/Laravel-12-CRUD/';
    </script>
    <style>
        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
        h1 { color: #333; }
        .message { margin: 30px 0; }
    </style>
</head>
<body>
    <h1>404 - Page Not Found</h1>
    <div class="message">
        <p>The page you're looking for doesn't exist or has been moved.</p>
        <p>Redirecting to homepage...</p>
    </div>
</body>
</html>
EOF
          
          # Pastikan ada file .nojekyll di folder public
          touch public/.nojekyll
      
      # Konfigurasi GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      # Upload folder public sebagai artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'  # PENTING: Menggunakan folder public sebagai sumber

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy ke GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
