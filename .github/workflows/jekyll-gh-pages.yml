name: Deploy Laravel to GitHub Pages

on:
  # Jalankan ketika push ke branch main
  push:
    branches: ["main"]
  # Memungkinkan menjalankan workflow manual dari tab Actions
  workflow_dispatch:

# Set izin yang diperlukan untuk deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Izinkan hanya satu deployment berjalan pada satu waktu
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kode
        uses: actions/checkout@v4
      
      # Setup PHP untuk Laravel
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.5'
          extensions: mbstring, dom, fileinfo, sqlite3, pdo_sqlite, curl, zip, xml
          tools: composer:v2
      
      # Install dependensi PHP
      - name: Install dependensi PHP
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
      
      # Konfigurasi Laravel
      - name: Konfigurasi Laravel
        run: |
          # Buat file .env jika belum ada
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          
          # Konfigurasi untuk production
          sed -i 's/APP_ENV=local/APP_ENV=production/g' .env
          sed -i 's/APP_DEBUG=true/APP_DEBUG=false/g' .env
          
          # Konfigurasi SQLite
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=sqlite/g' .env
          sed -i '/DB_HOST=/d' .env
          sed -i '/DB_PORT=/d' .env
          sed -i '/DB_DATABASE=/d' .env
          sed -i '/DB_USERNAME=/d' .env
          sed -i '/DB_PASSWORD=/d' .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          
          # Persiapkan database
          mkdir -p database
          touch database/database.sqlite
          
          # Generate application key
          php artisan key:generate
      
      # Setup Node.js untuk asset building
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      # Install dan build frontend assets
      - name: Install & build frontend
        run: |
          npm ci
          npm run build
      
      # Konfigurasi GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      # PENTING: Persiapkan build statis tanpa Jekyll
      - name: Persiapkan build statis
        run: |
          # Buat direktori _site untuk GitHub Pages
          mkdir -p _site
          
          # PENTING: Buat file .nojekyll untuk menonaktifkan Jekyll
          touch _site/.nojekyll
          
          # Salin semua file dari public ke _site
          cp -r public/* _site/
          
          # Buat index.html dengan Laravel server
          php -S localhost:8000 -t public &
          SERVER_PID=$!
          sleep 3
          curl -L -s http://localhost:8000 > _site/index.html
          kill $SERVER_PID
          
          # Buat halaman 404 untuk SPA routing
          cat > _site/404.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Page Not Found</title>
    <script>
        // Simpan path saat ini dan redirect ke homepage
        sessionStorage.setItem('redirect_path', window.location.pathname);
        window.location.href = "/Laravel-12-CRUD/";
    </script>
</head>
<body>
    <h1>Page Not Found</h1>
    <p>Redirecting to homepage...</p>
</body>
</html>
EOF
      
      # Upload artifact untuk deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy ke GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4